Задание: создать класс с полями, указанными в индивидуальном задании (табл. 11.2, столб 2).
Реализовать в классе методы:

конструктор по умолчанию;
конструктор перезагрузки с параметрами;
деструктор для освобождения памяти (с сообщением об уничтожении
объекта);
функции обработки данных (1 и 2), указанные в индивидуальном задании
(табл. 11.2, столбцы 3 и 4);
функцию формирования строки информации об объекте.
Создать проект для демонстрации работы: сформировать объекты со значениями-константами и с введенными значениями полей объекта из компонентов Edit. Выводить результаты в компонент Memo.

#include <iostream>
#include <string>

class Date {
public:
    int day, month, year;

    // Конструктор по умолчанию
    Date() : day(0), month(0), year(0) {}

    // Конструктор с параметрами
    Date(int d, int m, int y) : day(d), month(m), year(y) {}

    // Деструктор
    ~Date() {
        std::cout << "Объект даты уничтожен\n";
    }

    // Функция для определения високосного года
    bool isLeapYear() {
        return (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));
    }

    // Функция для увеличения даты на 5 дней
    void increaseDate() {
        const int daysInMonth[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
        day += 5;
        if (isLeapYear() && month == 2) {
            if (day > 29) {
                day -= 29;
                month++;
            }
        }
        else {
            if (day > daysInMonth[month - 1]) {
                day -= daysInMonth[month - 1];
                month++;
            }
        }
        if (month > 12) {
            month -= 12;
            year++;
        }
    }

    // Функция для формирования строки информации об объекте
    std::string toString() {
        return std::to_string(day) + "/" + std::to_string(month) + "/" + std::to_string(year);
    }
};

int main() {
    setlocale(LC_ALL, "ru");
    // Создание объекта с константными значениями
    Date date1(12, 5, 2024);

    // Вывод информации о дате
    std::cout << "Текущая дата: " << date1.toString() << std::endl;

    // Проверка, является ли год високосным
    std::cout << "Год високосный: " << (date1.isLeapYear() ? "Да" : "Нет") << std::endl;

    // Увеличение даты на 5 дней
    date1.increaseDate();

    // Вывод новой даты
    std::cout << "Дата после увеличения: " << date1.toString() << std::endl;

    return 0;
}
